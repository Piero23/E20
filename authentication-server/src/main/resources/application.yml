server:
  port: 9000
  ssl:
    key-store: classpath:server.p12
    key-store-password: changeit
    key-alias: server
    key-store-type: PKCS12
    enabled: true
    key-password: changeit


spring:
  config:
    import:
      - "optional:file:.env[.properties]"
      - "vault://"
  cloud:
    vault:
      token: ${VAULT_TOKEN}
      uri: ${VAULT_ADDR}
      application-name: application
    config:
      enabled: false
  application:
    name: authentication-server
  output:
    ansi:
      enabled: always

  ## Database Properties
  datasource:
    url: jdbc:postgresql://localhost:5454/e20
    username: ${db_username}
    password: ${db_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

  ## Security
  security:
    oauth2:
      authorizationserver: ## Clients
        client:
          gateway-client:
            registration:
              client-id: "gateway-client"
              client-secret: ${client_secret}
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "https://localhost:8060/login/oauth2/code/gateway-client"
              post-logout-redirect-uris:
                - "https://localhost:8060/"
              scopes:
                - "openid"
                - "profile"
            # Tolgo il Consenso per il Profile
            # require-authorization-consent: true


eureka:
  instance:
    secure-port: 9000
    secure-port-enabled: true
    non-secure-port-enabled: false

  client:
    serviceUrl:
      defaultZone: http://localhost:8061/eureka/

## Authentication Token Properties
auth:
  token:
    scopes: openid, roles
    issuer: "https://localhost:9000"
    expiration: 3600


jwt:
  security:
    enabled: true
    publicPaths: /v3/api-docs/**, /swagger-ui/**, /swagger-ui.html, /auth/register

logging:
  level:
    org.springframework.security: trace