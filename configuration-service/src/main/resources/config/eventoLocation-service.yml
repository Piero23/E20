spring:
  application:
    name: eventoLocation-service
  output:
    ansi:
      enabled: always

  datasource:
    url: jdbc:postgresql://localhost:5454/e20
    username: ${db_username}
    password: ${db_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8061/eureka/

cors:
  allowed-origins: https://localhost:8060

jwt:
  security:
    enabled: true
    publicPaths:
      /v3/api-docs/**,
      /swagger-ui/**,
      /swagger-ui.html,
      /api/evento/{id} ,
      /api/evento ,
      /api/evento/test,
      /api/location,
      /api/location/{id},
      /api/location/test,
      /api/preferiti/test,
      /api/evento/search/{string}
    protectedRoutes:
      - path: /api/preferiti/**
        roles:
          - ROLE_USER
      - path: POST:/api/evento
        roles:
          - ROLE_USER
      - path: DELETE:/api/evento/{id}
        roles:
          - ROLE_USER
      - path: PUT:/api/evento/{id}
        roles:
          - ROLE_USER
      - path: /api/evento/bookings
        roles:
          - ROLE_MANAGER
      - path: DELETE:/api/location/{id}
        roles:
          - ROLE_ADMIN
      - path: POST:/api/location
        roles:
          - ROLE_USER # TODO: aooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
      - path: PUT:/api/location/{id}
        roles:
          - ROLE_MANAGER
      - path: GET:/api/evento/myEvents
        roles:
          - ROLE_MANAGER

logging:
  file:
    name: logs/app.log
  level:
    demacs:
      unical:
        esse20: INFO

springdoc:
  packages-to-scan: org.unical.enterprise.eventoLocation
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    groups:
      enabled: true
