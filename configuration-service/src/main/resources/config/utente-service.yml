spring:
  application:
    name: utente-service
  output:
    ansi:
      enabled: always
  datasource:
    url: jdbc:postgresql://localhost:5454/e20
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true

  security:
    oauth2: ## OAuth2 Clients
      client:
        registration:
          gateway-client:
            client-id: gateway-client
            client-secret: secret
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8060/login/oauth2/code/gateway-client
            scope: openid, profile

        provider:
          gateway-client:
            issuer-uri: ${auth.token.issuer}
      resourceserver:
        jwt:
          issuer-uri: ${auth.token.issuer}

server:
  port: 0

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8061/eureka/

cors:
  allowed-origins: http://localhost:8060


jwt:
  security:
    enabled: true
    publicPaths: /v3/api-docs/**, /swagger-ui/**, /swagger-ui.html, /api/utente/register, /api/utente/test
    protectedRoutes:
      - path: /api/utente
        roles:
          - ROLE_ADMIN
      - path: /api/utente/{username}
        roles:
          - ROLE_USER
      - path: DELETE:/api/utente/{username}
        roles:
          - ROLE_USER
      - path: PUT:/api/utente/{username}
        roles:
          - ROLE_USER
      - path: /api/utente/getById
        roles:
          - ROLE_ADMIN

logging:
  file:
    name: logs/app.log
  level:
    demacs:
      unical:
        esse20: INFO

springdoc:
  packages-to-scan: org.unical.enterprise.utente
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    groups:
      enabled: true
